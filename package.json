{
	"name": "agda-mode",
	"displayName": "agda-mode",
	"description": "agda-mode on vscode",
	"icon": "asset/logo.png",
	"publisher": "banacorn",
	"version": "0.7.9",
	"engines": {
		"vscode": "^1.94.0"
	},
	"categories": [
		"Other"
	],
	"main": "./dist/app.bundle.js",
	"browser": "./dist/web.bundle.js",
	"repository": "https://github.com/banacorn/agda-mode-vscode",
	"extensionDependencies": [
		"qbane.als-wasm-loader"
	],
	"scripts": {
		"clean": "npx rescript clean",
		"dev": "npx rescript build -w & npx less-watch-compiler style/ dist/ & webpack --mode development --watch",
		"dev-web": "node run-web-extension.js",
		"test": "node lib/js/test/RunTestFromCLI.bs.js",
		"build": "npx rescript && npx lessc style/style.less dist/style.css && webpack --mode production && webpack --mode production --env target=web",
		"dry-run-publish": "npm run build && npm list --production --parseable --depth=99999 --loglevel=error"
	},
	"devDependencies": {
		"@vscode/test-electron": "^2.3.8",
		"@vscode/test-web": "^0.0.71",
		"buffer": "^6.0.3",
		"copy-webpack-plugin": "^6.0.3",
		"crypto-browserify": "^3.12.1",
		"glob": "^7.1.6",
		"less": "^4.1.1",
		"less-loader": "^7.0.2",
		"less-watch-compiler": "^1.14.6",
		"mocha": "^10.4.0",
		"path-browserify": "^1.0.1",
		"process": "^0.11.10",
		"rescript-fast-check": "github:banacorn/rescript-fast-check",
		"rescript-mocha": "github:DZakh-forks/rescript-mocha#uncurried",
		"stream-browserify": "^3.0.0",
		"url": "^0.11.4",
		"webpack": "^5.76.0",
		"webpack-bundle-analyzer": "^4.10.2",
		"webpack-cli": "^4.2.0",
		"webpack-node-externals": "^3.0.0"
	},
	"dependencies": {
		"@datastructures-js/binary-search-tree": "^5.3.2",
		"@glennsl/rescript-fetch": "^v0.2.3",
		"@glennsl/rescript-json-combinators": "^1.4.0",
		"@rescript/core": "^1.3.0",
		"@rescript/react": "^0.13.0",
		"@vscode/codicons": "^0.0.36",
		"compare-versions": "^3.5.1",
		"eventemitter3": ">=4.0.0",
		"getos": "^3.2.1",
		"react": "^18.0.0",
		"react-dom": "^18.0.0",
		"rescript": "^11.1.4",
		"rescript-nodejs": "github:banacorn/rescript-nodejs#3db4de107a442d6a5c9b1406032ef6afbe18d8f5",
		"rescript-vscode": "github:banacorn/rescript-vscode#v0.0.38",
		"rescript-webapi": ">=0.2.0",
		"untildify": "^4.0.0",
		"unzipper": "^0.10.11",
		"vscode-languageclient": "^8.0.0"
	},
	"contributes": {
		"languages": [
			{
				"id": "agda",
				"extensions": [
					".agda"
				],
				"aliases": [
					"Agda"
				],
				"configuration": "./language-configurations/agda.json",
				"icon": {
					"dark": "./asset/dark.png",
					"light": "./asset/light.png"
				}
			},
			{
				"id": "lagda-markdown",
				"extensions": [
					".lagda.md"
				],
				"aliases": [
					"Literate Agda (markdown)"
				],
				"configuration": "./language-configurations/lagda-markdown.json",
				"icon": {
					"dark": "./asset/dark.png",
					"light": "./asset/light.png"
				}
			},
			{
				"id": "markdown",
				"extensions": [
					".md"
				],
				"aliases": [
					"Markdown"
				]
			},
			{
				"id": "lagda-typst",
				"extensions": [
					".lagda.typ"
				],
				"aliases": [
					"Literate Agda (Typst)"
				],
				"configuration": "./language-configurations/lagda-typst.json",
				"icon": {
					"dark": "./asset/dark.png",
					"light": "./asset/light.png"
				}
			},
			{
				"id": "typst",
				"extensions": [
					".typ"
				],
				"aliases": [
					"Typst"
				]
			},
			{
				"id": "lagda-tex",
				"extensions": [
					".lagda.tex",
					".lagda"
				],
				"aliases": [
					"Literate Agda (TeX)"
				],
				"configuration": "./language-configurations/lagda-tex.json",
				"icon": {
					"dark": "./asset/dark.png",
					"light": "./asset/light.png"
				}
			},
			{
				"id": "lagda-rst",
				"extensions": [
					".lagda.rst"
				],
				"aliases": [
					"Literate Agda (reStructuredText)"
				],
				"configuration": "./language-configurations/lagda-rst.json",
				"icon": {
					"dark": "./asset/dark.png",
					"light": "./asset/light.png"
				}
			},
			{
				"id": "lagda-org",
				"extensions": [
					".lagda.org"
				],
				"aliases": [
					"Literate Agda (Org)"
				],
				"configuration": "./language-configurations/lagda-org.json",
				"icon": {
					"dark": "./asset/dark.png",
					"light": "./asset/light.png"
				}
			},
			{
				"id": "org",
				"extensions": [
					".org"
				],
				"aliases": [
					"Org"
				]
			},
			{
				"id": "lagda-forester",
				"extensions": [
					".lagda.tree"
				],
				"aliases": [
					"Literate Agda (forester)"
				],
				"configuration": "./language-configurations/lagda-forester.json",
				"icon": {
					"dark": "./asset/dark.png",
					"light": "./asset/light.png"
				}
			},
			{
				"id": "forester",
				"extensions": [
					".tree"
				],
				"aliases": [
					"forester"
				]
			}
		],
		"grammars": [
			{
				"language": "agda",
				"scopeName": "source.agda",
				"path": "./syntaxes/agda.tmLanguage.json",
				"embeddedLanguages": {
					"meta.embedded.block.haskell": "haskell",
					"meta.embedded.block.javascript": "javascript"
				}
			},
			{
				"language": "lagda-markdown",
				"scopeName": "source.markdown",
				"path": "./syntaxes/markdown.tmLanguage.json",
				"embeddedLanguages": {
					"meta.embedded.block.agda": "agda"
				}
			},
			{
				"language": "markdown",
				"scopeName": "source.markdown",
				"path": "./syntaxes/markdown.tmLanguage.json",
				"embeddedLanguages": {
					"meta.embedded.block.agda": "agda"
				}
			},
			{
				"language": "lagda-typst",
				"scopeName": "source.typst",
				"path": "./syntaxes/typst.tmLanguage.json",
				"embeddedLanguages": {
					"meta.embedded.block.agda": "agda"
				}
			},
			{
				"language": "typst",
				"scopeName": "source.typst",
				"path": "./syntaxes/typst.tmLanguage.json",
				"embeddedLanguages": {
					"meta.embedded.block.agda": "agda"
				}
			},
			{
				"language": "lagda-rst",
				"scopeName": "source.rst",
				"path": "./syntaxes/restructuredtext.tmLanguage.json",
				"embeddedLanguages": {
					"meta.embedded.block.agda": "agda"
				}
			},
			{
				"language": "lagda-tex",
				"scopeName": "source.tex",
				"path": "./syntaxes/tex.tmLanguage.json",
				"embeddedLanguages": {
					"meta.embedded.block.agda": "agda"
				}
			},
			{
				"language": "lagda-org",
				"scopeName": "source.org",
				"path": "./syntaxes/org.tmLanguage.json",
				"embeddedLanguages": {
					"meta.embedded.block.agda": "agda"
				}
			},
			{
				"language": "org",
				"scopeName": "source.org",
				"path": "./syntaxes/org.tmLanguage.json",
				"embeddedLanguages": {
					"meta.embedded.block.agda": "agda"
				}
			},
			{
				"language": "lagda-forester",
				"scopeName": "source.forester",
				"path": "./syntaxes/forester.tmLanguage.json",
				"embeddedLanguages": {
					"meta.embedded.block.agda": "agda"
				}
			},
			{
				"language": "forester",
				"scopeName": "source.forester",
				"path": "./syntaxes/forester.tmLanguage.json",
				"embeddedLanguages": {
					"meta.embedded.block.agda": "agda"
				}
			}
		],
		"commands": [
			{
				"command": "agda-mode.load",
				"title": "Load",
				"category": "Agda"
			},
			{
				"command": "agda-mode.quit",
				"title": "Quit",
				"category": "Agda"
			},
			{
				"command": "agda-mode.restart",
				"title": "Quit and restart",
				"category": "Agda"
			},
			{
				"command": "agda-mode.compile",
				"title": "Compile",
				"category": "Agda"
			},
			{
				"command": "agda-mode.toggle-display-of-implicit-arguments",
				"title": "Toggle display of hidden arguments",
				"category": "Agda"
			},
			{
				"command": "agda-mode.toggle-display-of-irrelevant-arguments",
				"title": "Toggle display of irrelevant arguments",
				"category": "Agda"
			},
			{
				"command": "agda-mode.show-constraints",
				"title": "Show constraints",
				"category": "Agda"
			},
			{
				"command": "agda-mode.solve-constraints[AsIs]",
				"title": "Solve constraints (returned as is)",
				"category": "Agda"
			},
			{
				"command": "agda-mode.solve-constraints[Simplified]",
				"title": "Solve constraints (simplified)",
				"category": "Agda"
			},
			{
				"command": "agda-mode.solve-constraints[Normalised]",
				"title": "Solve constraints (normalised)",
				"category": "Agda"
			},
			{
				"command": "agda-mode.solve-constraints[HeadNormal]",
				"title": "Solve constraints (head normalised)",
				"category": "Agda"
			},
			{
				"command": "agda-mode.show-goals[AsIs]",
				"title": "Show goals (returned as is)",
				"category": "Agda"
			},
			{
				"command": "agda-mode.show-goals[Simplified]",
				"title": "Show goals (simplified)",
				"category": "Agda"
			},
			{
				"command": "agda-mode.show-goals[Normalised]",
				"title": "Show goals (normalised)",
				"category": "Agda"
			},
			{
				"command": "agda-mode.show-goals[HeadNormal]",
				"title": "Show goals (head normalised)",
				"category": "Agda"
			},
			{
				"command": "agda-mode.next-goal",
				"title": "Next goal",
				"category": "Agda"
			},
			{
				"command": "agda-mode.previous-goal",
				"title": "Previous goal",
				"category": "Agda"
			},
			{
				"command": "agda-mode.search-about[Simplified]",
				"title": "Search about (simplified)",
				"category": "Agda"
			},
			{
				"command": "agda-mode.search-about[Instantiated]",
				"title": "Search about (instantiated)",
				"category": "Agda"
			},
			{
				"command": "agda-mode.search-about[Normalised]",
				"title": "Search about (normalised)",
				"category": "Agda"
			},
			{
				"command": "agda-mode.search-about[HeadNormal]",
				"title": "Search about (head normalised)",
				"category": "Agda"
			},
			{
				"command": "agda-mode.give",
				"title": "Give",
				"category": "Agda"
			},
			{
				"command": "agda-mode.refine",
				"title": "Refine",
				"category": "Agda"
			},
			{
				"command": "agda-mode.elaborate-and-give[Simplified]",
				"title": "Elaborate and give (simplified)",
				"category": "Agda"
			},
			{
				"command": "agda-mode.elaborate-and-give[Instantiated]",
				"title": "Elaborate and give (instantiated)",
				"category": "Agda"
			},
			{
				"command": "agda-mode.elaborate-and-give[Normalised]",
				"title": "Elaborate and give (normalised)",
				"category": "Agda"
			},
			{
				"command": "agda-mode.elaborate-and-give[HeadNormal]",
				"title": "Elaborate and give (head normalised)",
				"category": "Agda"
			},
			{
				"command": "agda-mode.auto[AsIs]",
				"title": "Auto (returned as is)",
				"category": "Agda"
			},
			{
				"command": "agda-mode.auto[Simplified]",
				"title": "Auto (simplified)",
				"category": "Agda"
			},
			{
				"command": "agda-mode.auto[Normalised]",
				"title": "Auto (normalised)",
				"category": "Agda"
			},
			{
				"command": "agda-mode.auto[HeadNormal]",
				"title": "Auto (head normalised)",
				"category": "Agda"
			},
			{
				"command": "agda-mode.case",
				"title": "Case",
				"category": "Agda"
			},
			{
				"command": "agda-mode.helper-function-type[AsIs]",
				"title": "Helper function type (returned as is)",
				"category": "Agda"
			},
			{
				"command": "agda-mode.helper-function-type[Simplified]",
				"title": "Helper function type (simplified)",
				"category": "Agda"
			},
			{
				"command": "agda-mode.helper-function-type[Normalised]",
				"title": "Helper function type (normalised)",
				"category": "Agda"
			},
			{
				"command": "agda-mode.helper-function-type[HeadNormal]",
				"title": "Helper function type (head normalised)",
				"category": "Agda"
			},
			{
				"command": "agda-mode.goal-type[Simplified]",
				"title": "Goal type (simplified)",
				"category": "Agda"
			},
			{
				"command": "agda-mode.goal-type[Instantiated]",
				"title": "Goal type (instantiated)",
				"category": "Agda"
			},
			{
				"command": "agda-mode.goal-type[Normalised]",
				"title": "Goal type (normalised)",
				"category": "Agda"
			},
			{
				"command": "agda-mode.goal-type[HeadNormal]",
				"title": "Goal type (head normalised)",
				"category": "Agda"
			},
			{
				"command": "agda-mode.context[Simplified]",
				"title": "Context (simplified)",
				"category": "Agda"
			},
			{
				"command": "agda-mode.context[Instantiated]",
				"title": "Context (instantiated)",
				"category": "Agda"
			},
			{
				"command": "agda-mode.context[Normalised]",
				"title": "Context (normalised)",
				"category": "Agda"
			},
			{
				"command": "agda-mode.context[HeadNormal]",
				"title": "Context (head normalised)",
				"category": "Agda"
			},
			{
				"command": "agda-mode.infer-type[Simplified]",
				"title": "Infer Type (simplified)",
				"category": "Agda"
			},
			{
				"command": "agda-mode.infer-type[Instantiated]",
				"title": "Infer Type (instantiated)",
				"category": "Agda"
			},
			{
				"command": "agda-mode.infer-type[Normalised]",
				"title": "Infer Type (normalised)",
				"category": "Agda"
			},
			{
				"command": "agda-mode.infer-type[HeadNormal]",
				"title": "Infer Type (head normalised)",
				"category": "Agda"
			},
			{
				"command": "agda-mode.goal-type-and-context[Simplified]",
				"title": "Goal type and context (simplified)",
				"category": "Agda"
			},
			{
				"command": "agda-mode.goal-type-and-context[Instantiated]",
				"title": "Goal type and context (instantiated)",
				"category": "Agda"
			},
			{
				"command": "agda-mode.goal-type-and-context[Normalised]",
				"title": "Goal type and context (normalised)",
				"category": "Agda"
			},
			{
				"command": "agda-mode.goal-type-and-context[HeadNormal]",
				"title": "Goal type and context (head normalised)",
				"category": "Agda"
			},
			{
				"command": "agda-mode.goal-type-context-and-inferred-type[Simplified]",
				"title": "Goal type, context and inferred type (simplified)",
				"category": "Agda"
			},
			{
				"command": "agda-mode.goal-type-context-and-inferred-type[Instantiated]",
				"title": "Goal type, context and inferred type (instantiated)",
				"category": "Agda"
			},
			{
				"command": "agda-mode.goal-type-context-and-inferred-type[Normalised]",
				"title": "Goal type, context and inferred type (normalised)",
				"category": "Agda"
			},
			{
				"command": "agda-mode.goal-type-context-and-inferred-type[HeadNormal]",
				"title": "Goal type, context and inferred type (head normalised)",
				"category": "Agda"
			},
			{
				"command": "agda-mode.goal-type-context-and-checked-type[Simplified]",
				"title": "Goal type, context and checked type (simplified)",
				"category": "Agda"
			},
			{
				"command": "agda-mode.goal-type-context-and-checked-type[Instantiated]",
				"title": "Goal type, context and checked type (instantiated)",
				"category": "Agda"
			},
			{
				"command": "agda-mode.goal-type-context-and-checked-type[Normalised]",
				"title": "Goal type, context and checked type (normalised)",
				"category": "Agda"
			},
			{
				"command": "agda-mode.goal-type-context-and-checked-type[HeadNormal]",
				"title": "Goal type, context and checked type (head normalised)",
				"category": "Agda"
			},
			{
				"command": "agda-mode.module-contents[Simplified]",
				"title": "Module contents (simplified)",
				"category": "Agda"
			},
			{
				"command": "agda-mode.module-contents[Instantiated]",
				"title": "Module contents (instantiated)",
				"category": "Agda"
			},
			{
				"command": "agda-mode.module-contents[Normalised]",
				"title": "Module contents (normalised)",
				"category": "Agda"
			},
			{
				"command": "agda-mode.module-contents[HeadNormal]",
				"title": "Module contents (head normalised)",
				"category": "Agda"
			},
			{
				"command": "agda-mode.compute-normal-form[DefaultCompute]",
				"title": "Compute normal form",
				"category": "Agda"
			},
			{
				"command": "agda-mode.compute-normal-form[IgnoreAbstract]",
				"title": "Compute normal form ignoring abstract",
				"category": "Agda"
			},
			{
				"command": "agda-mode.compute-normal-form[UseShowInstance]",
				"title": "Compute normal form using show instance",
				"category": "Agda"
			},
			{
				"command": "agda-mode.why-in-scope",
				"title": "Why in scope",
				"category": "Agda"
			},
			{
				"command": "agda-mode.switch-agda-version",
				"title": "Switch to a different Agda version",
				"category": "Agda"
			},
			{
				"command": "agda-mode.escape",
				"title": "Escape",
				"category": "Agda"
			},
			{
				"command": "agda-mode.input-symbol[Activate]",
				"title": "Activate input method",
				"category": "Agda"
			},
			{
				"command": "agda-mode.lookup-symbol",
				"title": "Lookup Unicode symbol input sequence",
				"category": "Agda"
			},
			{
				"command": "agda-mode.open-debug-buffer",
				"title": "Open Debug Buffer",
				"category": "Agda"
			},
			{
				"command": "agda-mode.hello-web",
				"title": "Hello Web (Test Command)",
				"category": "Agda"
			}
		],
		"keybindings": [
			{
				"command": "agda-mode.load",
				"key": "ctrl+c ctrl+l",
				"mac": "ctrl+c ctrl+l",
				"when": "editorLangId =~ /.*(l?agda(-(markdown|typst|latex|tex|rst|org|forester))?).*/ && !editorHasSelection && editorTextFocus"
			},
			{
				"command": "agda-mode.input-symbol[Activate]",
				"key": "\\",
				"when": "config.agdaMode.inputMethod.enabled && !agdaModeTyping && editorLangId =~ /.*(l?agda(-(markdown|typst|latex|tex|rst|org|forester))?).*/ && editorTextFocus && variableLanguage"
			},
			{
				"command": "agda-mode.input-symbol[Activate]",
				"key": "[Backslash]",
				"when": "config.agdaMode.inputMethod.enabled && !agdaModeTyping && editorLangId =~ /.*(l?agda(-(markdown|typst|latex|tex|rst|org|forester))?).*/ && editorTextFocus"
			},
			{
				"command": "agda-mode.quit",
				"key": "ctrl+c ctrl+x ctrl+q",
				"mac": "ctrl+c ctrl+x ctrl+q",
				"when": "editorLangId =~ /.*(l?agda(-(markdown|typst|latex|tex|rst|org|forester))?).*/ && !editorHasSelection && editorTextFocus"
			},
			{
				"command": "agda-mode.restart",
				"key": "ctrl+c ctrl+x ctrl+r",
				"mac": "ctrl+c ctrl+x ctrl+r",
				"when": "editorLangId =~ /.*(l?agda(-(markdown|typst|latex|tex|rst|org|forester))?).*/ && !editorHasSelection && editorTextFocus"
			},
			{
				"command": "agda-mode.compile",
				"key": "ctrl+c ctrl+x ctrl+c",
				"mac": "ctrl+c ctrl+x ctrl+c",
				"when": "editorLangId =~ /.*(l?agda(-(markdown|typst|latex|tex|rst|org|forester))?).*/ && !editorHasSelection && editorTextFocus"
			},
			{
				"command": "agda-mode.toggle-display-of-implicit-arguments",
				"key": "ctrl+c ctrl+x ctrl+h",
				"mac": "ctrl+c ctrl+x ctrl+h",
				"when": "editorLangId =~ /.*(l?agda(-(markdown|typst|latex|tex|rst|org|forester))?).*/ && !editorHasSelection && editorTextFocus"
			},
			{
				"command": "agda-mode.toggle-display-of-irrelevant-arguments",
				"key": "ctrl+c ctrl+x ctrl+i",
				"mac": "ctrl+c ctrl+x ctrl+i",
				"when": "editorLangId =~ /.*(l?agda(-(markdown|typst|latex|tex|rst|org|forester))?).*/ && !editorHasSelection && editorTextFocus"
			},
			{
				"command": "agda-mode.show-constraints",
				"key": "ctrl+c ctrl+=",
				"mac": "ctrl+c ctrl+=",
				"when": "editorLangId =~ /.*(l?agda(-(markdown|typst|latex|tex|rst|org|forester))?).*/ && !editorHasSelection && editorTextFocus"
			},
			{
				"command": "agda-mode.solve-constraints[AsIs]",
				"key": "ctrl+c ctrl+s",
				"mac": "ctrl+c ctrl+s",
				"when": "editorLangId =~ /.*(l?agda(-(markdown|typst|latex|tex|rst|org|forester))?).*/ && !editorHasSelection && editorTextFocus"
			},
			{
				"command": "agda-mode.solve-constraints[Simplified]",
				"key": "ctrl+u ctrl+c ctrl+s",
				"mac": "ctrl+u ctrl+c ctrl+s",
				"when": "editorLangId =~ /.*(l?agda(-(markdown|typst|latex|tex|rst|org|forester))?).*/ && !terminalFocus"
			},
			{
				"command": "agda-mode.solve-constraints[Normalised]",
				"key": "ctrl+u ctrl+u ctrl+c ctrl+s",
				"mac": "ctrl+u ctrl+u ctrl+c ctrl+s",
				"when": "editorLangId =~ /.*(l?agda(-(markdown|typst|latex|tex|rst|org|forester))?).*/"
			},
			{
				"command": "agda-mode.solve-constraints[HeadNormal]",
				"key": "ctrl+u ctrl+u ctrl+u ctrl+c ctrl+s",
				"mac": "ctrl+u ctrl+u ctrl+u ctrl+c ctrl+s",
				"when": "editorLangId =~ /.*(l?agda(-(markdown|typst|latex|tex|rst|org|forester))?).*/"
			},
			{
				"command": "agda-mode.show-goals[AsIs]",
				"key": "ctrl+c ctrl+?",
				"mac": "ctrl+c ctrl+?",
				"when": "editorLangId =~ /.*(l?agda(-(markdown|typst|latex|tex|rst|org|forester))?).*/ && !editorHasSelection && editorTextFocus"
			},
			{
				"command": "agda-mode.show-goals[AsIs]",
				"key": "ctrl+c ctrl+shift+/",
				"mac": "ctrl+c ctrl+shift+/",
				"when": "editorLangId =~ /.*(l?agda(-(markdown|typst|latex|tex|rst|org|forester))?).*/ && !editorHasSelection && editorTextFocus"
			},
			{
				"command": "agda-mode.show-goals[Simplified]",
				"key": "ctrl+u ctrl+c ctrl+?",
				"mac": "ctrl+u ctrl+c ctrl+?",
				"when": "editorLangId =~ /.*(l?agda(-(markdown|typst|latex|tex|rst|org|forester))?).*/ && !editorHasSelection && editorTextFocus"
			},
			{
				"command": "agda-mode.show-goals[Simplified]",
				"key": "ctrl+u ctrl+c ctrl+shift+/",
				"mac": "ctrl+u ctrl+c ctrl+shift+/",
				"when": "editorLangId =~ /.*(l?agda(-(markdown|typst|latex|tex|rst|org|forester))?).*/ && !editorHasSelection && editorTextFocus"
			},
			{
				"command": "agda-mode.show-goals[Normalised]",
				"key": "ctrl+u ctrl+u ctrl+c ctrl+?",
				"mac": "ctrl+u ctrl+u ctrl+c ctrl+?",
				"when": "editorLangId =~ /.*(l?agda(-(markdown|typst|latex|tex|rst|org|forester))?).*/ && !editorHasSelection && editorTextFocus"
			},
			{
				"command": "agda-mode.show-goals[Normalised]",
				"key": "ctrl+u ctrl+u ctrl+c ctrl+shift+/",
				"mac": "ctrl+u ctrl+u ctrl+c ctrl+shift+/",
				"when": "editorLangId =~ /.*(l?agda(-(markdown|typst|latex|tex|rst|org|forester))?).*/ && !editorHasSelection && editorTextFocus"
			},
			{
				"command": "agda-mode.show-goals[HeadNormal]",
				"key": "ctrl+u ctrl+u ctrl+u ctrl+c ctrl+?",
				"mac": "ctrl+u ctrl+u ctrl+u ctrl+c ctrl+?",
				"when": "editorLangId =~ /.*(l?agda(-(markdown|typst|latex|tex|rst|org|forester))?).*/ && !editorHasSelection && editorTextFocus"
			},
			{
				"command": "agda-mode.show-goals[HeadNormal]",
				"key": "ctrl+u ctrl+u ctrl+u ctrl+c ctrl+shift+/",
				"mac": "ctrl+u ctrl+u ctrl+u ctrl+c ctrl+shift+/",
				"when": "editorLangId =~ /.*(l?agda(-(markdown|typst|latex|tex|rst|org|forester))?).*/ && !editorHasSelection && editorTextFocus"
			},
			{
				"command": "agda-mode.next-goal",
				"key": "ctrl+c ctrl+f",
				"mac": "ctrl+c ctrl+f",
				"when": "editorLangId =~ /.*(l?agda(-(markdown|typst|latex|tex|rst|org|forester))?).*/ && !editorHasSelection && editorTextFocus"
			},
			{
				"command": "agda-mode.previous-goal",
				"key": "ctrl+c ctrl+b",
				"mac": "ctrl+c ctrl+b",
				"when": "editorLangId =~ /.*(l?agda(-(markdown|typst|latex|tex|rst|org|forester))?).*/ && !editorHasSelection && editorTextFocus"
			},
			{
				"command": "agda-mode.search-about[Simplified]",
				"key": "ctrl+c ctrl+z",
				"mac": "ctrl+c ctrl+z",
				"when": "editorLangId =~ /.*(l?agda(-(markdown|typst|latex|tex|rst|org|forester))?).*/ && !editorHasSelection && editorTextFocus"
			},
			{
				"command": "agda-mode.search-about[Instantiated]",
				"key": "ctrl+u ctrl+c ctrl+z",
				"mac": "ctrl+u ctrl+c ctrl+z",
				"when": "editorLangId =~ /.*(l?agda(-(markdown|typst|latex|tex|rst|org|forester))?).*/ && !terminalFocus"
			},
			{
				"command": "agda-mode.search-about[Normalised]",
				"key": "ctrl+u ctrl+u ctrl+c ctrl+z",
				"mac": "ctrl+u ctrl+u ctrl+c ctrl+z",
				"when": "editorLangId =~ /.*(l?agda(-(markdown|typst|latex|tex|rst|org|forester))?).*/"
			},
			{
				"command": "agda-mode.search-about[HeadNormal]",
				"key": "ctrl+u ctrl+u ctrl+u ctrl+c ctrl+z",
				"mac": "ctrl+u ctrl+u ctrl+u ctrl+c ctrl+z",
				"when": "editorLangId =~ /.*(l?agda(-(markdown|typst|latex|tex|rst|org|forester))?).*/"
			},
			{
				"command": "agda-mode.give",
				"key": "ctrl+c ctrl+space",
				"mac": "ctrl+c ctrl+space",
				"when": "editorLangId =~ /.*(l?agda(-(markdown|typst|latex|tex|rst|org|forester))?).*/ && !editorHasSelection && editorTextFocus"
			},
			{
				"command": "agda-mode.refine",
				"key": "ctrl+c ctrl+r",
				"mac": "ctrl+c ctrl+r",
				"when": "editorLangId =~ /.*(l?agda(-(markdown|typst|latex|tex|rst|org|forester))?).*/ && !editorHasSelection && editorTextFocus"
			},
			{
				"command": "agda-mode.elaborate-and-give[Simplified]",
				"key": "ctrl+c ctrl+m",
				"mac": "ctrl+c ctrl+m",
				"when": "editorLangId =~ /.*(l?agda(-(markdown|typst|latex|tex|rst|org|forester))?).*/ && !editorHasSelection && editorTextFocus"
			},
			{
				"command": "agda-mode.elaborate-and-give[Instantiated]",
				"key": "ctrl+u ctrl+c ctrl+m",
				"mac": "ctrl+u ctrl+c ctrl+m",
				"when": "editorLangId =~ /.*(l?agda(-(markdown|typst|latex|tex|rst|org|forester))?).*/ && !terminalFocus"
			},
			{
				"command": "agda-mode.elaborate-and-give[Normalised]",
				"key": "ctrl+u ctrl+u ctrl+c ctrl+m",
				"mac": "ctrl+u ctrl+u ctrl+c ctrl+m",
				"when": "editorLangId =~ /.*(l?agda(-(markdown|typst|latex|tex|rst|org|forester))?).*/"
			},
			{
				"command": "agda-mode.elaborate-and-give[HeadNormal]",
				"key": "ctrl+u ctrl+u ctrl+u ctrl+c ctrl+m",
				"mac": "ctrl+u ctrl+u ctrl+u ctrl+c ctrl+m",
				"when": "editorLangId =~ /.*(l?agda(-(markdown|typst|latex|tex|rst|org|forester))?).*/"
			},
			{
				"command": "agda-mode.auto[AsIs]",
				"key": "ctrl+c ctrl+a",
				"mac": "ctrl+c ctrl+a",
				"when": "editorLangId =~ /.*(l?agda(-(markdown|typst|latex|tex|rst|org|forester))?).*/ && !editorHasSelection && editorTextFocus"
			},
			{
				"command": "agda-mode.auto[Simplified]",
				"key": "ctrl+u ctrl+c ctrl+a",
				"mac": "ctrl+u ctrl+c ctrl+a",
				"when": "editorLangId =~ /.*(l?agda(-(markdown|typst|latex|tex|rst|org|forester))?).*/ && !editorHasSelection && editorTextFocus"
			},
			{
				"command": "agda-mode.auto[Normalised]",
				"key": "ctrl+u ctrl+u ctrl+c ctrl+a",
				"mac": "ctrl+u ctrl+u ctrl+c ctrl+a",
				"when": "editorLangId =~ /.*(l?agda(-(markdown|typst|latex|tex|rst|org|forester))?).*/ && !editorHasSelection && editorTextFocus"
			},
			{
				"command": "agda-mode.auto[HeadNormal]",
				"key": "ctrl+u ctrl+u ctrl+u ctrl+c ctrl+a",
				"mac": "ctrl+u ctrl+u ctrl+u ctrl+c ctrl+a",
				"when": "editorLangId =~ /.*(l?agda(-(markdown|typst|latex|tex|rst|org|forester))?).*/ && !editorHasSelection && editorTextFocus"
			},
			{
				"command": "agda-mode.case",
				"key": "ctrl+c ctrl+c",
				"mac": "ctrl+c ctrl+c",
				"when": "editorLangId =~ /.*(l?agda(-(markdown|typst|latex|tex|rst|org|forester))?).*/ && !editorHasSelection && editorTextFocus"
			},
			{
				"command": "agda-mode.helper-function-type[AsIs]",
				"key": "ctrl+c ctrl+h",
				"mac": "ctrl+c ctrl+h",
				"when": "editorLangId =~ /.*(l?agda(-(markdown|typst|latex|tex|rst|org|forester))?).*/ && !editorHasSelection && editorTextFocus"
			},
			{
				"command": "agda-mode.helper-function-type[Simplified]",
				"key": "ctrl+u ctrl+c ctrl+h",
				"mac": "ctrl+u ctrl+c ctrl+h",
				"when": "editorLangId =~ /.*(l?agda(-(markdown|typst|latex|tex|rst|org|forester))?).*/ && !editorHasSelection && editorTextFocus"
			},
			{
				"command": "agda-mode.helper-function-type[Normalised]",
				"key": "ctrl+u ctrl+u ctrl+c ctrl+h",
				"mac": "ctrl+u ctrl+u ctrl+c ctrl+h",
				"when": "editorLangId =~ /.*(l?agda(-(markdown|typst|latex|tex|rst|org|forester))?).*/ && !terminalFocus"
			},
			{
				"command": "agda-mode.helper-function-type[HeadNormal]",
				"key": "ctrl+u ctrl+u ctrl+u ctrl+c ctrl+h",
				"mac": "ctrl+u ctrl+u ctrl+u ctrl+c ctrl+h",
				"when": "editorLangId =~ /.*(l?agda(-(markdown|typst|latex|tex|rst|org|forester))?).*/"
			},
			{
				"command": "agda-mode.goal-type[Simplified]",
				"key": "ctrl+c ctrl+t",
				"mac": "ctrl+c ctrl+t",
				"when": "editorLangId =~ /.*(l?agda(-(markdown|typst|latex|tex|rst|org|forester))?).*/ && !editorHasSelection && editorTextFocus"
			},
			{
				"command": "agda-mode.goal-type[Instantiated]",
				"key": "ctrl+u ctrl+c ctrl+t",
				"mac": "ctrl+u ctrl+c ctrl+t",
				"when": "editorLangId =~ /.*(l?agda(-(markdown|typst|latex|tex|rst|org|forester))?).*/ && !terminalFocus"
			},
			{
				"command": "agda-mode.goal-type[Normalised]",
				"key": "ctrl+u ctrl+u ctrl+c ctrl+t",
				"mac": "ctrl+u ctrl+u ctrl+c ctrl+t",
				"when": "editorLangId =~ /.*(l?agda(-(markdown|typst|latex|tex|rst|org|forester))?).*/"
			},
			{
				"command": "agda-mode.goal-type[HeadNormal]",
				"key": "ctrl+u ctrl+u ctrl+u ctrl+c ctrl+t",
				"mac": "ctrl+u ctrl+u ctrl+u ctrl+c ctrl+t",
				"when": "editorLangId =~ /.*(l?agda(-(markdown|typst|latex|tex|rst|org|forester))?).*/"
			},
			{
				"command": "agda-mode.context[Simplified]",
				"key": "ctrl+c ctrl+e",
				"mac": "ctrl+c ctrl+e",
				"when": "editorLangId =~ /.*(l?agda(-(markdown|typst|latex|tex|rst|org|forester))?).*/ && !editorHasSelection && editorTextFocus"
			},
			{
				"command": "agda-mode.context[Instantiated]",
				"key": "ctrl+u ctrl+c ctrl+e",
				"mac": "ctrl+u ctrl+c ctrl+e",
				"when": "editorLangId =~ /.*(l?agda(-(markdown|typst|latex|tex|rst|org|forester))?).*/ && !terminalFocus"
			},
			{
				"command": "agda-mode.context[Normalised]",
				"key": "ctrl+u ctrl+u ctrl+c ctrl+e",
				"mac": "ctrl+u ctrl+u ctrl+c ctrl+e",
				"when": "editorLangId =~ /.*(l?agda(-(markdown|typst|latex|tex|rst|org|forester))?).*/"
			},
			{
				"command": "agda-mode.context[HeadNormal]",
				"key": "ctrl+u ctrl+u ctrl+u ctrl+c ctrl+e",
				"mac": "ctrl+u ctrl+u ctrl+u ctrl+c ctrl+e",
				"when": "editorLangId =~ /.*(l?agda(-(markdown|typst|latex|tex|rst|org|forester))?).*/"
			},
			{
				"command": "agda-mode.infer-type[Simplified]",
				"key": "ctrl+c ctrl+d",
				"mac": "ctrl+c ctrl+d",
				"when": "editorLangId =~ /.*(l?agda(-(markdown|typst|latex|tex|rst|org|forester))?).*/ && !editorHasSelection && editorTextFocus"
			},
			{
				"command": "agda-mode.infer-type[Instantiated]",
				"key": "ctrl+u ctrl+c ctrl+d",
				"mac": "ctrl+u ctrl+u ctrl+c ctrl+d",
				"when": "editorLangId =~ /.*(l?agda(-(markdown|typst|latex|tex|rst|org|forester))?).*/ && !terminalFocus"
			},
			{
				"command": "agda-mode.infer-type[Normalised]",
				"key": "ctrl+u ctrl+u ctrl+c ctrl+d",
				"mac": "ctrl+u ctrl+u ctrl+c ctrl+d",
				"when": "editorLangId =~ /.*(l?agda(-(markdown|typst|latex|tex|rst|org|forester))?).*/"
			},
			{
				"command": "agda-mode.infer-type[HeadNormal]",
				"key": "ctrl+u ctrl+u ctrl+u ctrl+c ctrl+d",
				"mac": "ctrl+u ctrl+u ctrl+u ctrl+c ctrl+d",
				"when": "editorLangId =~ /.*(l?agda(-(markdown|typst|latex|tex|rst|org|forester))?).*/"
			},
			{
				"command": "agda-mode.goal-type-and-context[Simplified]",
				"key": "ctrl+c ctrl+,",
				"mac": "ctrl+c ctrl+,",
				"when": "editorLangId =~ /.*(l?agda(-(markdown|typst|latex|tex|rst|org|forester))?).*/ && !editorHasSelection && editorTextFocus"
			},
			{
				"command": "agda-mode.goal-type-and-context[Instantiated]",
				"key": "ctrl+u ctrl+c ctrl+,",
				"mac": "ctrl+u ctrl+c ctrl+,",
				"when": "editorLangId =~ /.*(l?agda(-(markdown|typst|latex|tex|rst|org|forester))?).*/ && !terminalFocus"
			},
			{
				"command": "agda-mode.goal-type-and-context[Normalised]",
				"key": "ctrl+u ctrl+u ctrl+c ctrl+,",
				"mac": "ctrl+u ctrl+u ctrl+c ctrl+,",
				"when": "editorLangId =~ /.*(l?agda(-(markdown|typst|latex|tex|rst|org|forester))?).*/"
			},
			{
				"command": "agda-mode.goal-type-and-context[HeadNormal]",
				"key": "ctrl+u ctrl+u ctrl+u ctrl+c ctrl+,",
				"mac": "ctrl+u ctrl+u ctrl+u ctrl+c ctrl+,",
				"when": "editorLangId =~ /.*(l?agda(-(markdown|typst|latex|tex|rst|org|forester))?).*/"
			},
			{
				"command": "agda-mode.goal-type-context-and-inferred-type[Simplified]",
				"key": "ctrl+c ctrl+.",
				"mac": "ctrl+c ctrl+.",
				"when": "editorLangId =~ /.*(l?agda(-(markdown|typst|latex|tex|rst|org|forester))?).*/ && !editorHasSelection && editorTextFocus"
			},
			{
				"command": "agda-mode.goal-type-context-and-inferred-type[Instantiated]",
				"key": "ctrl+u ctrl+c ctrl+.",
				"mac": "ctrl+u ctrl+c ctrl+.",
				"when": "editorLangId =~ /.*(l?agda(-(markdown|typst|latex|tex|rst|org|forester))?).*/ && !terminalFocus"
			},
			{
				"command": "agda-mode.goal-type-context-and-inferred-type[Normalised]",
				"key": "ctrl+u ctrl+u ctrl+c ctrl+.",
				"mac": "ctrl+u ctrl+u ctrl+c ctrl+.",
				"when": "editorLangId =~ /.*(l?agda(-(markdown|typst|latex|tex|rst|org|forester))?).*/"
			},
			{
				"command": "agda-mode.goal-type-context-and-inferred-type[HeadNormal]",
				"key": "ctrl+u ctrl+u ctrl+u ctrl+c ctrl+.",
				"mac": "ctrl+u ctrl+u ctrl+u ctrl+c ctrl+.",
				"when": "editorLangId =~ /.*(l?agda(-(markdown|typst|latex|tex|rst|org|forester))?).*/"
			},
			{
				"command": "agda-mode.goal-type-context-and-checked-type[Simplified]",
				"key": "ctrl+c ctrl+;",
				"mac": "ctrl+c ctrl+;",
				"when": "editorLangId =~ /.*(l?agda(-(markdown|typst|latex|tex|rst|org|forester))?).*/ && !editorHasSelection && editorTextFocus"
			},
			{
				"command": "agda-mode.goal-type-context-and-checked-type[Instantiated]",
				"key": "ctrl+u ctrl+c ctrl+;",
				"mac": "ctrl+u ctrl+c ctrl+;",
				"when": "editorLangId =~ /.*(l?agda(-(markdown|typst|latex|tex|rst|org|forester))?).*/ && !terminalFocus"
			},
			{
				"command": "agda-mode.goal-type-context-and-checked-type[Normalised]",
				"key": "ctrl+u ctrl+u ctrl+c ctrl+;",
				"mac": "ctrl+u ctrl+u ctrl+c ctrl+;",
				"when": "editorLangId =~ /.*(l?agda(-(markdown|typst|latex|tex|rst|org|forester))?).*/"
			},
			{
				"command": "agda-mode.goal-type-context-and-checked-type[HeadNormal]",
				"key": "ctrl+u ctrl+u ctrl+u ctrl+c ctrl+;",
				"mac": "ctrl+u ctrl+u ctrl+u ctrl+c ctrl+;",
				"when": "editorLangId =~ /.*(l?agda(-(markdown|typst|latex|tex|rst|org|forester))?).*/"
			},
			{
				"command": "agda-mode.module-contents[Simplified]",
				"key": "ctrl+c ctrl+o",
				"mac": "ctrl+c ctrl+o",
				"when": "editorLangId =~ /.*(l?agda(-(markdown|typst|latex|tex|rst|org|forester))?).*/ && !editorHasSelection && editorTextFocus"
			},
			{
				"command": "agda-mode.module-contents[Instantiated]",
				"key": "ctrl+u ctrl+c ctrl+o",
				"mac": "ctrl+u ctrl+c ctrl+o",
				"when": "editorLangId =~ /.*(l?agda(-(markdown|typst|latex|tex|rst|org|forester))?).*/ && !terminalFocus"
			},
			{
				"command": "agda-mode.module-contents[Normalised]",
				"key": "ctrl+u ctrl+u ctrl+c ctrl+o",
				"mac": "ctrl+u ctrl+u ctrl+c ctrl+o",
				"when": "editorLangId =~ /.*(l?agda(-(markdown|typst|latex|tex|rst|org|forester))?).*/"
			},
			{
				"command": "agda-mode.module-contents[HeadNormal]",
				"key": "ctrl+u ctrl+u ctrl+u ctrl+c ctrl+o",
				"mac": "ctrl+u ctrl+u ctrl+u ctrl+c ctrl+o",
				"when": "editorLangId =~ /.*(l?agda(-(markdown|typst|latex|tex|rst|org|forester))?).*/"
			},
			{
				"command": "agda-mode.compute-normal-form[DefaultCompute]",
				"key": "ctrl+c ctrl+n",
				"mac": "ctrl+c ctrl+n",
				"when": "editorLangId =~ /.*(l?agda(-(markdown|typst|latex|tex|rst|org|forester))?).*/ && !editorHasSelection && editorTextFocus"
			},
			{
				"command": "agda-mode.compute-normal-form[IgnoreAbstract]",
				"key": "ctrl+u ctrl+c ctrl+n",
				"mac": "ctrl+u ctrl+c ctrl+n",
				"when": "editorLangId =~ /.*(l?agda(-(markdown|typst|latex|tex|rst|org|forester))?).*/ && !terminalFocus"
			},
			{
				"command": "agda-mode.compute-normal-form[UseShowInstance]",
				"key": "ctrl+u ctrl+u ctrl+c ctrl+n",
				"mac": "ctrl+u ctrl+u ctrl+c ctrl+n",
				"when": "editorLangId =~ /.*(l?agda(-(markdown|typst|latex|tex|rst|org|forester))?).*/"
			},
			{
				"command": "agda-mode.why-in-scope",
				"key": "ctrl+c ctrl+w",
				"mac": "ctrl+c ctrl+w",
				"when": "editorLangId =~ /.*(l?agda(-(markdown|typst|latex|tex|rst|org|forester))?).*/ && !editorHasSelection && editorTextFocus"
			},
			{
				"command": "agda-mode.switch-agda-version",
				"key": "ctrl+x ctrl+s",
				"mac": "ctrl+x ctrl+s",
				"when": "editorLangId =~ /.*(l?agda(-(markdown|typst|latex|tex|rst|org|forester))?).*/ && !editorHasSelection && editorTextFocus"
			},
			{
				"command": "agda-mode.escape",
				"key": "escape",
				"mac": "escape",
				"when": "editorLangId =~ /.*(l?agda(-(markdown|typst|latex|tex|rst|org|forester))?).*/ && agdaModePrompting || agdaModeTyping"
			},
			{
				"command": "agda-mode.input-symbol[BrowseUp]",
				"key": "up",
				"when": "editorLangId =~ /.*(l?agda(-(markdown|typst|latex|tex|rst|org|forester))?).*/ && agdaModeTyping"
			},
			{
				"command": "agda-mode.input-symbol[BrowseRight]",
				"key": "right",
				"when": "editorLangId =~ /.*(l?agda(-(markdown|typst|latex|tex|rst|org|forester))?).*/ && agdaModeTyping"
			},
			{
				"command": "agda-mode.input-symbol[BrowseDown]",
				"key": "down",
				"when": "editorLangId =~ /.*(l?agda(-(markdown|typst|latex|tex|rst|org|forester))?).*/ && agdaModeTyping"
			},
			{
				"command": "agda-mode.input-symbol[BrowseLeft]",
				"key": "left",
				"when": "editorLangId =~ /.*(l?agda(-(markdown|typst|latex|tex|rst|org|forester))?).*/ && agdaModeTyping"
			},
			{
				"command": "agda-mode.input-symbol[InsertOpenCurlyBraces]",
				"key": "shift+[",
				"when": "editorLangId =~ /.*(l?agda(-(markdown|typst|latex|tex|rst|org|forester))?).*/ && agdaModeTyping"
			},
			{
				"command": "agda-mode.input-symbol[InsertOpenParenthesis]",
				"key": "shift+9",
				"when": "editorLangId =~ /.*(l?agda(-(markdown|typst|latex|tex|rst|org|forester))?).*/ && agdaModeTyping"
			},
			{
				"command": "agda-mode.lookup-symbol",
				"key": "ctrl+x ctrl+=",
				"when": "editorLangId =~ /.*(l?agda(-(markdown|typst|latex|tex|rst|org|forester))?).*/ && !terminalFocus"
			},
			{
				"command": "markdown.showPreview",
				"key": "shift+cmd+v",
				"when": "!notebookEditorFocused && editorLangId == 'lagda-markdown'"
			},
			{
				"command": "markdown.showPreviewToSide",
				"key": "cmd+k v",
				"when": "!notebookEditorFocused && editorLangId == 'lagda-markdown'"
			}
		],
		"configuration": {
			"title": "agda-mode",
			"properties": {
				"agdaMode.connection.agdaVersion": {
					"type": "string",
					"default": "",
					"scope": "machine-overridable",
					"description": "Name of the executable of Agda. For searching the path. Overwrite to override."
				},
				"agdaMode.connection.paths": {
					"type": "array",
					"items": {
						"type": "string"
					},
					"default": [],
					"scope": "machine-overridable",
					"description": "A list of file paths or URLs pointing to Agda binaries or Agda Language Servers. Items in this list will be tried for connection from the LAST to the first (because it's easier to append new items at the end). Use the '^X ^S' command to manage these items. When empty, items are inferred by searching for 'agda' or 'als' commands."
				},
				"agdaMode.connection.commandLineOptions": {
					"type": "string",
					"default": "",
					"scope": "machine-overridable",
					"description": "Command-line options for Agda or Agda Language Server, delimited by space, like you would in terminal, e.g. \"--without-K --safe\""
				},
				"agdaMode.connection.agdaLanguageServerPort": {
					"type": "number",
					"default": 4096,
					"scope": "machine-overridable",
					"description": "Port number for Agda Language Server (for the ease of development)"
				},
				"agdaMode.connection.downloadPolicy": {
					"type": "string",
					"default": "Undecided",
					"enum": [
						"Undecided",
						"Yes",
						"No, and don't ask again"
					],
					"markdownEnumDescriptions": [
						"The default state, which would trigger the modal dialog",
						"Download and install the latest Agda Language Server",
						"Do nothing and don't ask again"
					],
					"scope": "machine-overridable",
					"description": "Download policy when Agda or Agda Language Server is missing (on desktop platforms only)"
				},
				"agdaMode.view.panelMountPosition": {
					"type": "string",
					"default": "bottom",
					"enum": [
						"bottom",
						"right"
					],
					"description": "Where to mount the panel"
				},
				"agdaMode.libraryPath": {
					"type": "string",
					"default": "",
					"scope": "machine-overridable",
					"description": "Paths to include (such as agda-stdlib), separate with comma. Useless after Agda 2.5.0."
				},
				"agdaMode.highlighting.IPC": {
					"type": "string",
					"default": "Standard input/output",
					"enum": [
						"Standard input/output",
						"Temporary Files"
					],
					"scope": "machine-overridable",
					"description": "How agda-mode receives highlighting information from Agda. Via either standard input/output or temporary files (which may require frequent disk access)."
				},
				"agdaMode.backend": {
					"type": "string",
					"default": "GHC",
					"enum": [
						"GHC",
						"LaTeX",
						"QuickLaTeX"
					],
					"scope": "machine-overridable",
					"description": "Backend target"
				},
				"agdaMode.inputMethod.enabled": {
					"type": "boolean",
					"default": true,
					"description": "Enable Unicode input method. Disable this if you are using a different input method extension like `latex-input`."
				},
				"agdaMode.devMode.enabled": {
					"type": "boolean",
					"default": false,
					"description": "Enable development mode to access experimental features like WASM support."
				},
				"agdaMode.buffer.fontSize": {
					"type": [
						"number",
						"null"
					],
					"default": 14,
					"markdownDescription": "The font size of Agda buffer. If not set, `#editor.fontSize#` is used."
				}
			}
		}
	},
	"__metadata": {
		"id": "50315a05-1d1b-44bf-9e2c-be33d1c4a77e",
		"publisherDisplayName": "Ting-Gian LUA",
		"publisherId": "22df016e-6b4f-49b2-9856-3336695d1289"
	}
}
