// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var Curry = require("rescript/lib/js/curry.js");
var Assert = require("assert");
var Vscode = require("vscode");
var Test__Util$AgdaModeVscode = require("./Test__Util.bs.js");

describe.skip("Undo/Redo History", (function () {
        this.timeout(4000);
        var filename = "CaseSplit.agda";
        var fileContent = {
          contents: ""
        };
        beforeEach(async function () {
              fileContent.contents = await Test__Util$AgdaModeVscode.$$File.read(Test__Util$AgdaModeVscode.Path.asset(filename));
            });
        afterEach(async function () {
              return await Test__Util$AgdaModeVscode.$$File.write(Test__Util$AgdaModeVscode.Path.asset(filename), fileContent.contents);
            });
        it("shoule make case split a single transaction", (async function () {
                var ctx = await Test__Util$AgdaModeVscode.AgdaMode.makeAndLoad(filename);
                await Test__Util$AgdaModeVscode.AgdaMode.$$case(ctx, new Vscode.Position(8, 11), "x");
                await Vscode.commands.executeCommand("undo");
                var actual = await Test__Util$AgdaModeVscode.$$File.read(Test__Util$AgdaModeVscode.Path.asset("CaseSplit.agda"));
                var expected = fileContent.contents;
                return Curry._3(Assert.deepStrictEqual, actual, expected, undefined);
              }));
      }));

/*  Not a pure module */
