// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var Curry = require("rescript/lib/js/curry.js");
var Assert = require("assert");
var Vscode = require("vscode");
var Goals$AgdaModeVscode = require("../../src/Goals.bs.js");
var Editor$AgdaModeVscode = require("../../src/Editor.bs.js");
var Test__Util$AgdaModeVscode = require("./Test__Util.bs.js");

describe.only("Goals", (function () {
        var fileContent = {
          contents: ""
        };
        before(async function () {
              fileContent.contents = await Test__Util$AgdaModeVscode.$$File.read(Test__Util$AgdaModeVscode.Path.asset("Goals.agda"));
            });
        after(async function () {
              return await Test__Util$AgdaModeVscode.$$File.write(Test__Util$AgdaModeVscode.Path.asset("Goals.agda"), fileContent.contents);
            });
        it("should instantiate all 4 goals with question marks expanded to holes", (async function () {
                var ctx = await Test__Util$AgdaModeVscode.AgdaMode.makeAndLoad("Goals.agda");
                var actual = await Test__Util$AgdaModeVscode.$$File.read(Test__Util$AgdaModeVscode.Path.asset("Goals.agda"));
                var expected = await Test__Util$AgdaModeVscode.$$File.read(Test__Util$AgdaModeVscode.Path.asset("Goals.agda.out"));
                Curry._3(Assert.deepStrictEqual, actual, expected, undefined);
                return Curry._3(Assert.deepStrictEqual, Goals$AgdaModeVscode.getGoals(ctx.state.goals2), new Map([
                                [
                                  0,
                                  [
                                    92,
                                    99
                                  ]
                                ],
                                [
                                  1,
                                  [
                                    118,
                                    125
                                  ]
                                ],
                                [
                                  2,
                                  [
                                    145,
                                    152
                                  ]
                                ],
                                [
                                  3,
                                  [
                                    171,
                                    178
                                  ]
                                ]
                              ]), undefined);
              }));
        it("should remove a goal after it has been completely destroyed", (async function () {
                var ctx = await Test__Util$AgdaModeVscode.AgdaMode.makeAndLoad("Goals.agda");
                await Editor$AgdaModeVscode.$$Text.$$delete(ctx.state.document, new Vscode.Range(new Vscode.Position(9, 19), new Vscode.Position(9, 26)));
                return Curry._3(Assert.deepStrictEqual, Goals$AgdaModeVscode.getGoals(ctx.state.goals2), new Map([
                                [
                                  0,
                                  [
                                    92,
                                    99
                                  ]
                                ],
                                [
                                  1,
                                  [
                                    118,
                                    125
                                  ]
                                ],
                                [
                                  3,
                                  [
                                    164,
                                    171
                                  ]
                                ]
                              ]), undefined);
              }));
      }));

/*  Not a pure module */
