// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var Curry = require("rescript/lib/js/curry.js");
var Assert = require("assert");
var Vscode = require("vscode");
var Editor$AgdaModeVscode = require("../../src/Editor.bs.js");
var Test__Util$AgdaModeVscode = require("./Test__Util.bs.js");
var State__Command$AgdaModeVscode = require("../../src/State/State__Command.bs.js");

describe("EventFromView.JumpToTarget", (function () {
        var filename = "ModuleContents.agda";
        var filepath = Test__Util$AgdaModeVscode.Path.asset(filename);
        it("should set the cursor at the correct position", (async function () {
                var ctx = await Test__Util$AgdaModeVscode.AgdaMode.makeAndLoad(filename);
                var link = {
                  TAG: "SrcLoc",
                  _0: {
                    TAG: "Range",
                    _0: filepath,
                    _1: [{
                        start: {
                          line: 5,
                          col: 8,
                          pos: 49
                        },
                        end_: {
                          line: 5,
                          col: 15,
                          pos: 56
                        }
                      }]
                  }
                };
                await State__Command$AgdaModeVscode.dispatchCommand(ctx.state, {
                      TAG: "EventFromView",
                      _0: {
                        TAG: "JumpToTarget",
                        _0: link
                      }
                    });
                var cursorPosition = Editor$AgdaModeVscode.Cursor.get(ctx.state.editor);
                return Curry._3(Assert.deepStrictEqual, cursorPosition, new Vscode.Position(4, 14), undefined);
              }));
        it("should set the cursor at the correct hole", (async function () {
                var ctx = await Test__Util$AgdaModeVscode.AgdaMode.makeAndLoad(filename);
                await State__Command$AgdaModeVscode.dispatchCommand(ctx.state, {
                      TAG: "EventFromView",
                      _0: {
                        TAG: "JumpToTarget",
                        _0: {
                          TAG: "Hole",
                          _0: 0
                        }
                      }
                    });
                var cursorPosition = Editor$AgdaModeVscode.Cursor.get(ctx.state.editor);
                return Curry._3(Assert.deepStrictEqual, cursorPosition, new Vscode.Position(4, 10), undefined);
              }));
      }));

/*  Not a pure module */
