// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var Caml = require("rescript/lib/js/caml.js");
var Chan$AgdaModeVscode = require("../../Util/Chan.bs.js");
var Util$AgdaModeVscode = require("../../Util/Util.bs.js");

function make() {
  return {
          tally: 0,
          allDone: Chan$AgdaModeVscode.make(),
          deferredLastResponses: []
        };
}

function runNonLast(self, handler, response) {
  self.tally = self.tally + 1 | 0;
  handler(response).finally(function () {
        self.tally = self.tally - 1 | 0;
        if (self.tally === 0) {
          return Chan$AgdaModeVscode.emit(self.allDone, undefined);
        }
        
      });
}

function addLast(self, priority, response) {
  self.deferredLastResponses.push([
        priority,
        response
      ]);
}

function onceDone(self) {
  if (self.tally === 0) {
    return Promise.resolve();
  } else {
    return Chan$AgdaModeVscode.once(self.allDone);
  }
}

async function runLast(self, handler) {
  await onceDone(self);
  self.deferredLastResponses.sort(function (x, y) {
        return Caml.int_compare(x[0], y[0]);
      });
  var deferredLastResponses = self.deferredLastResponses.map(function (prim) {
        return prim[1];
      });
  deferredLastResponses.unshift("CompleteHighlightingAndMakePromptReappear");
  await Util$AgdaModeVscode.Promise_.oneByOne(deferredLastResponses.map(function (res) {
            return function () {
              return handler(res);
            };
          }));
}

var Module = {
  make: make,
  addLast: addLast,
  runNonLast: runNonLast,
  runLast: runLast
};

exports.Module = Module;
exports.make = make;
exports.addLast = addLast;
exports.runNonLast = runNonLast;
exports.runLast = runLast;
/* Chan-AgdaModeVscode Not a pure module */
