// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var Getos = require("getos");
var Nodeos = require("node:os");

function determine() {
  return new Promise((function (resolve, param) {
                Getos(function (error, raw) {
                      if (!(error == null)) {
                        return resolve({
                                    TAG: "Error",
                                    _0: raw
                                  });
                      }
                      var match = Nodeos.platform();
                      switch (match) {
                        case "darwin" :
                            var match$1 = Nodeos.arch();
                            switch (match$1) {
                              case "arm64" :
                                  return resolve({
                                              TAG: "Ok",
                                              _0: "MacOS_Arm"
                                            });
                              case "x64" :
                                  return resolve({
                                              TAG: "Ok",
                                              _0: "MacOS_Intel"
                                            });
                              default:
                                return resolve({
                                            TAG: "Error",
                                            _0: raw
                                          });
                            }
                        case "linux" :
                            var match$2 = raw.dist;
                            if (match$2 === "Ubuntu") {
                              return resolve({
                                          TAG: "Ok",
                                          _0: "Ubuntu"
                                        });
                            } else {
                              return resolve({
                                          TAG: "Error",
                                          _0: raw
                                        });
                            }
                        case "win32" :
                            return resolve({
                                        TAG: "Ok",
                                        _0: "Windows"
                                      });
                        default:
                          return resolve({
                                      TAG: "Error",
                                      _0: raw
                                    });
                      }
                    });
              }));
}

function toAssetName(platform) {
  switch (platform) {
    case "Windows" :
        return "windows";
    case "Ubuntu" :
        return "ubuntu";
    case "MacOS_Arm" :
        return "macos-arm64";
    case "MacOS_Intel" :
        return "macos-x64";
    
  }
}

exports.determine = determine;
exports.toAssetName = toAssetName;
/* getos Not a pure module */
