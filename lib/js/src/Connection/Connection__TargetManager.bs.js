// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var Vscode = require("vscode");
var FS$AgdaModeVscode = require("../FS.bs.js");
var Config$AgdaModeVscode = require("../Config.bs.js");
var Connection__URI$AgdaModeVscode = require("./Connection__URI.bs.js");
var Connection__Target$AgdaModeVscode = require("./Connection__Target.bs.js");

async function getInstalledTargetsAndPersistThem(findCommands, globalStorageUri) {
  var pairs = await Promise.all(Config$AgdaModeVscode.Connection.getAgdaPaths().map(async function (uri) {
            var target = await Connection__Target$AgdaModeVscode.fromURI(uri);
            return [
                    Connection__URI$AgdaModeVscode.toString(uri),
                    target
                  ];
          }));
  var dict = Object.fromEntries(pairs);
  var agda = await findCommands(["agda"]);
  if (agda.TAG === "Ok") {
    var agda$1 = agda._0;
    var uri = Connection__Target$AgdaModeVscode.toURI(agda$1);
    await Config$AgdaModeVscode.Connection.addAgdaPath(uri);
    dict[Connection__URI$AgdaModeVscode.toString(uri)] = {
      TAG: "Ok",
      _0: agda$1
    };
  }
  var als = await findCommands(["als"]);
  if (als.TAG === "Ok") {
    var als$1 = als._0;
    var uri$1 = Connection__Target$AgdaModeVscode.toURI(als$1);
    await Config$AgdaModeVscode.Connection.addAgdaPath(uri$1);
    dict[Connection__URI$AgdaModeVscode.toString(uri$1)] = {
      TAG: "Ok",
      _0: als$1
    };
  }
  var addAgdaOrALS = async function (folderURI, fileName) {
    var executablePath = Vscode.Uri.joinPath(folderURI, fileName);
    var target = await Connection__Target$AgdaModeVscode.fromRawPath(executablePath.fsPath);
    if (target.TAG !== "Ok") {
      return ;
    }
    var target$1 = target._0;
    var uri = Connection__Target$AgdaModeVscode.toURI(target$1);
    await Config$AgdaModeVscode.Connection.addAgdaPath(uri);
    dict[Connection__URI$AgdaModeVscode.toString(uri)] = {
      TAG: "Ok",
      _0: target$1
    };
  };
  var handleFile = function (folderPath) {
    return async function (param) {
      var filename = param[0];
      switch (filename) {
        case "agda" :
        case "agda.exe" :
        case "als" :
        case "als.exe " :
            break;
        default:
          return ;
      }
      return await addAgdaOrALS(folderPath, filename);
    };
  };
  var handleFolder = async function (param) {
    var uri = Vscode.Uri.joinPath(globalStorageUri, param[0]);
    var files = await FS$AgdaModeVscode.readDirectory(uri);
    if (files.TAG !== "Ok") {
      return ;
    }
    await Promise.all(files._0.map(handleFile(uri)));
  };
  var folders = await FS$AgdaModeVscode.readDirectory(globalStorageUri);
  if (folders.TAG === "Ok") {
    await Promise.all(folders._0.map(handleFolder));
  }
  return dict;
}

exports.getInstalledTargetsAndPersistThem = getInstalledTargetsAndPersistThem;
/* vscode Not a pure module */
