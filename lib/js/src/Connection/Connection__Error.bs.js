// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var Connection__Target$AgdaModeVscode = require("./Connection__Target.bs.js");
var Connection__Command$AgdaModeVscode = require("./Connection__Command.bs.js");
var Connection__Download$AgdaModeVscode = require("./Connection__Download.bs.js");
var Connection__Target__ALS__Error$AgdaModeVscode = require("./Target/ALS/Connection__Target__ALS__Error.bs.js");
var Connection__Target__Agda__Error$AgdaModeVscode = require("./Target/Agda/Connection__Target__Agda__Error.bs.js");

function toString(attempts) {
  return (
          attempts.targets.length === 0 ? "Tried to connect with the path from the configuration but there are none.\n" : "Tried to connect with the path from the configuration but all failed:\n" + attempts.targets.map(Connection__Target$AgdaModeVscode.$$Error.toString).join("\n") + "\n"
        ) + (
          attempts.commands.length === 0 ? "" : attempts.commands.map(Connection__Command$AgdaModeVscode.$$Error.toString).join("\n")
        );
}

var Attempts = {
  toString: toString
};

function toString$1(x) {
  switch (x.TAG) {
    case "PlatformNotSupported" :
        var platform = x._1;
        return toString(x._0) + "\nTried to download the Agda Language Server but the platform `" + platform.os + "/" + platform.dist + "` is not supported.\n";
    case "NoDownloadALS" :
        return toString(x._0) + "\nPrebuilt Agda Language Server available for download but you opted not to.\n";
    case "DownloadALS" :
        return toString(x._0) + "\nTried to download the Agda Language Server but failed:\n" + Connection__Download$AgdaModeVscode.$$Error.toString(x._1);
    
  }
}

var Aggregated = {
  Attempts: Attempts,
  toString: toString$1
};

function toString$2(x) {
  switch (x.TAG) {
    case "Agda" :
        return Connection__Target__Agda__Error$AgdaModeVscode.toString(x._0);
    case "ALS" :
        return Connection__Target__ALS__Error$AgdaModeVscode.toString(x._0);
    case "Aggregated" :
        return [
                "Connection Error",
                toString$1(x._0)
              ];
    
  }
}

exports.Aggregated = Aggregated;
exports.toString = toString$2;
/* Connection__Target-AgdaModeVscode Not a pure module */
