// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var Vscode = require("vscode");
var FS$AgdaModeVscode = require("../FS.bs.js");
var Main$AgdaModeVscode = require("./Main.bs.js");
var Connection__Download$AgdaModeVscode = require("../Connection/Download/Connection__Download.bs.js");

function determinePlatform() {
  return Promise.resolve({
              TAG: "Ok",
              _0: "Web"
            });
}

function findCommand(_command, _timeoutOpt) {
  return Promise.resolve({
              TAG: "Error",
              _0: "NotFound"
            });
}

async function alreadyDownloaded(globalStorageUri, order) {
  if (order === "LatestALS") {
    return ;
  }
  var wasmUri = Vscode.Uri.joinPath(globalStorageUri, "dev-als", "als.wasm");
  var match = await FS$AgdaModeVscode.stat(wasmUri);
  if (match.TAG === "Ok") {
    return wasmUri.toString();
  }
  
}

function resolveDownloadOrder(order, useCache) {
  return async function (memento, globalStorageUri, platform) {
    if (order === "LatestALS") {
      return {
              TAG: "Error",
              _0: "CannotFindCompatibleALSRelease"
            };
    }
    var mockAsset = {
      url: "https://unpkg.com/agda-wasm@0.0.3-als.2.8.0/als/2.8.0/als.wasm",
      id: 0,
      node_id: "mock-web-dev-als",
      name: "als-dev-Agda-2.8.0-wasm",
      label: "WASM Language Server",
      content_type: "application/wasm",
      state: "uploaded",
      size: 0,
      created_at: "2024-01-01T00:00:00Z",
      updated_at: "2024-01-01T00:00:00Z",
      browser_download_url: "https://unpkg.com/agda-wasm@0.0.3-als.2.8.0/als/2.8.0/als.wasm"
    };
    var mockRelease_assets = [mockAsset];
    var mockRelease_body = "Mock release for web WASM download from UNPKG";
    var mockRelease = {
      url: "https://api.github.com/repos/agda/agda-language-server/releases/mock",
      assets_url: "https://api.github.com/repos/agda/agda-language-server/releases/mock/assets",
      upload_url: "https://uploads.github.com/repos/agda/agda-language-server/releases/mock/assets",
      html_url: "https://github.com/agda/agda-language-server/releases/tag/dev",
      id: 0,
      node_id: "mock-web-dev-release",
      tag_name: "dev",
      target_commitish: "master",
      name: "dev",
      draft: false,
      prerelease: true,
      created_at: "2024-01-01T00:00:00Z",
      published_at: "2024-01-01T00:00:00Z",
      assets: mockRelease_assets,
      tarball_url: "https://api.github.com/repos/agda/agda-language-server/tarball/dev",
      zipball_url: "https://api.github.com/repos/agda/agda-language-server/zipball/dev",
      body: mockRelease_body
    };
    return {
            TAG: "Ok",
            _0: {
              TAG: "FromGitHub",
              _0: "DevALS",
              _1: {
                release: mockRelease,
                asset: mockAsset,
                saveAsFileName: "dev-als"
              }
            }
          };
  };
}

function askUserAboutDownloadPolicy() {
  return Promise.resolve("Yes");
}

var Web = {
  determinePlatform: determinePlatform,
  findCommand: findCommand,
  alreadyDownloaded: alreadyDownloaded,
  resolveDownloadOrder: resolveDownloadOrder,
  download: Connection__Download$AgdaModeVscode.download,
  askUserAboutDownloadPolicy: askUserAboutDownloadPolicy
};

function make() {
  return Web;
}

function activate(context) {
  return Main$AgdaModeVscode.activate(Web, context);
}

var deactivate = Main$AgdaModeVscode.deactivate;

exports.Web = Web;
exports.make = make;
exports.activate = activate;
exports.deactivate = deactivate;
/* vscode Not a pure module */
