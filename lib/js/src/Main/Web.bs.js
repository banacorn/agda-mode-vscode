// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var Main$AgdaModeVscode = require("./Main.bs.js");
var Connection__DevALS$AgdaModeVscode = require("../Connection/Download/Connection__DevALS.bs.js");
var Connection__Download$AgdaModeVscode = require("../Connection/Download/Connection__Download.bs.js");
var Connection__LatestALS$AgdaModeVscode = require("../Connection/Download/Connection__LatestALS.bs.js");
var Connection__DevWASMALS$AgdaModeVscode = require("../Connection/Download/Connection__DevWASMALS.bs.js");

function determinePlatform() {
  return Promise.resolve({
              TAG: "Ok",
              _0: "Web"
            });
}

function findCommand(_command, _timeoutOpt) {
  return Promise.resolve({
              TAG: "Error",
              _0: "NotFound"
            });
}

function resolveDownloadOrder(order, useCache) {
  return async function (memento, globalStorageUri, platform) {
    var repo;
    switch (order) {
      case "LatestALS" :
          repo = Connection__LatestALS$AgdaModeVscode.makeRepo(globalStorageUri);
          break;
      case "DevALS" :
          repo = Connection__DevALS$AgdaModeVscode.makeRepo(globalStorageUri);
          break;
      case "DevWASMALS" :
          repo = Connection__DevWASMALS$AgdaModeVscode.makeRepo(globalStorageUri);
          break;
      
    }
    var toDownloadOrder;
    switch (order) {
      case "LatestALS" :
          toDownloadOrder = (function (__x) {
              return Connection__LatestALS$AgdaModeVscode.toDownloadOrder(__x, platform);
            });
          break;
      case "DevALS" :
          toDownloadOrder = (function (__x) {
              return Connection__DevALS$AgdaModeVscode.toDownloadOrder(__x, platform);
            });
          break;
      case "DevWASMALS" :
          toDownloadOrder = (function (__x) {
              return Connection__DevWASMALS$AgdaModeVscode.toDownloadOrder(__x);
            });
          break;
      
    }
    var error = await Connection__Download$AgdaModeVscode.getReleaseManifestFromGitHub(memento, repo, useCache);
    if (error.TAG === "Ok") {
      return toDownloadOrder(error._0);
    } else {
      return {
              TAG: "Error",
              _0: error._0
            };
    }
  };
}

function askUserAboutDownloadPolicy() {
  return Promise.resolve("No");
}

function openFolder(_uri) {
  return Promise.resolve();
}

var Web = {
  determinePlatform: determinePlatform,
  findCommand: findCommand,
  alreadyDownloaded: Connection__Download$AgdaModeVscode.alreadyDownloaded,
  resolveDownloadOrder: resolveDownloadOrder,
  download: Connection__Download$AgdaModeVscode.download,
  askUserAboutDownloadPolicy: askUserAboutDownloadPolicy,
  openFolder: openFolder
};

function make() {
  return Web;
}

function activate(context) {
  return Main$AgdaModeVscode.activate(Web, context);
}

var deactivate = Main$AgdaModeVscode.deactivate;

exports.Web = Web;
exports.make = make;
exports.activate = activate;
exports.deactivate = deactivate;
/* Main-AgdaModeVscode Not a pure module */
