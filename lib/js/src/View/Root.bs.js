// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var React = require("react");
var VSCode = require("rescript-vscode/lib/js/src/VSCode.bs.js");
var Caml_option = require("rescript/lib/js/caml_option.js");
var Client = require("react-dom/client");
var Chan$AgdaModeVscode = require("../Util/Chan.bs.js");
var View$AgdaModeVscode = require("./View.bs.js");
var Json$JsonCombinators = require("@glennsl/rescript-json-combinators/lib/js/src/Json.bs.js");
var Panel$AgdaModeVscode = require("./Panel/Panel.bs.js");

var vscode = acquireVsCodeApi();

var onRequest = Chan$AgdaModeVscode.make();

var onEventToView = Chan$AgdaModeVscode.make();

VSCode.Api.onMessage(function (stringifiedJSON) {
      var json = JSON.parse(stringifiedJSON);
      var match = Json$JsonCombinators.decode(json, View$AgdaModeVscode.RequestOrEventToView.decode);
      if (match.TAG !== "Ok") {
        return ;
      }
      var $$event = match._0;
      if ($$event.TAG === "Request") {
        return Chan$AgdaModeVscode.emit(onRequest, $$event._0);
      } else {
        return Chan$AgdaModeVscode.emit(onEventToView, $$event._0);
      }
    });

var onResponse = Chan$AgdaModeVscode.make();

Chan$AgdaModeVscode.on(onResponse, (function (response) {
        vscode.postMessage(View$AgdaModeVscode.ResponseOrEventFromView.encode({
                  TAG: "Response",
                  _0: response
                }));
      }));

var onEventFromView = Chan$AgdaModeVscode.make();

Chan$AgdaModeVscode.on(onEventFromView, (function ($$event) {
        vscode.postMessage(View$AgdaModeVscode.ResponseOrEventFromView.encode({
                  TAG: "Event",
                  _0: $$event
                }));
      }));

var rootElement = document.getElementById("root");

if (!(rootElement == null)) {
  Client.createRoot(rootElement).render(React.createElement(Panel$AgdaModeVscode.make, {
            onRequest: onRequest,
            onEventToView: onEventToView,
            onResponse: onResponse,
            onEventFromView: onEventFromView
          }));
}

var rootElement$1 = (rootElement == null) ? undefined : Caml_option.some(rootElement);

exports.vscode = vscode;
exports.onRequest = onRequest;
exports.onEventToView = onEventToView;
exports.onResponse = onResponse;
exports.onEventFromView = onEventFromView;
exports.rootElement = rootElement$1;
/* vscode Not a pure module */
